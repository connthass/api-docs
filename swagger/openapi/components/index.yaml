parameters:
  Fields:
    name: fields
    in: query
    description: 検索結果で取得するフィールドをカンマ区切りで指定
    required: false
    schema:
      type: string
  Query:
    name: query
    in: query
    description: 検索クエリ
    required: false
    schema:
      type: string
  Page:
    name: page
    in: query
    description: 'ページ番号 (1から100まで)'
    required: false
    schema:
      type: integer
      format: int64
  PerPage:
    name: perPage
    in: query
    description: '1ページあたりに含まれる要素数 (1から100まで)'
    required: false
    schema:
      type: integer
      format: int64
requestBodies:
  Entry:
    description: 追加するためにはUserオブジェクトの配列が必要です
    required: true
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Entry'
  Event:
    description: 追加するためにはEventオブジェクトが必要です
    required: true
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Event'
  Category:
    description: 追加するためにはCategoryオブジェクトが必要です
    required: true
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Category'
  User:
    description: 追加するためにはUserオブジェクトが必要です
    required: true
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/User'
  Group:
    description: 追加するためにはGroupオブジェクトが必要です
    required: true
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Group'
responses:
  Event:
    description: 追加または更新されたEventオブジェクトを返します
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Event'
  Events:
    description: イベント検索後のイベントの一覧を返します
    content:
      application/json:
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Event'
  Category:
    description: 追加または更新されたCategoryオブジェクトを返します
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Category'
  User:
    description: 追加または更新されたUserオブジェクトを返します
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/User'
  Group:
    description: 追加または更新されたGroupオブジェクトを返します
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Group'
  Groups:
    description: グループ検索後のグループの一覧を返します
    content:
      application/json:
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Group'
  Entry:
    description: 参加したUserオブジェクトの配列を返します
    content:
      application/json:
        schema:
          type: object
          properties:
            entries:
              type: array
              items:
                $ref: '#/components/schemas/User'
            organizers:
              type: array
              items:
                $ref: '#/components/schemas/User'
securitySchemes:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-KEY
schemas:
  Entry:
    type: object
    properties:
      entries:
        type: array
        items:
          $ref: '#/components/schemas/User'
      organizers:
        type: array
        items:
          $ref: '#/components/schemas/User'
  Group:
    type: object
    properties:
      id:
        type: string
        example: '1'
      name:
        type: string
        example: '開発部勉強会'
      description:
        type: string
        example: '月一で勉強会をするよ'
      domain:
        type: string
        example: 'dev-meeting'
      colorCode:
        type: string
        example: '#6495ed'
      imageUrl:
        type: string
        example: 'https://miro.medium.com/max/1200/1*aKVg84SP5oPV9fwOnbl6yQ.png'
  Category:
    type: object
    properties:
      id:
        type: string
        example: '1'
      name:
        type: string
        example: 'Gophar'
  User:
    type: object
    properties:
      id:
        type: string
        example: '1'
      name:
        type: string
        example: 'Hogehoge Taro'
  Event:
    type: object
    required:
      - title
    properties:
      id:
        type: string
        example: '1'
      title:
        type: string
        example: 合同勉強会
      description:
        type: string
        example: エンジニア集まれ
      capacity:
        type: integer
        example: 50
      colorCode:
        type: string
        example: '#f0f8ff'
      imageUrl:
        type: string
        example: 'https://miro.medium.com/max/1200/1*aKVg84SP5oPV9fwOnbl6yQ.png'
      qrCodeUrl:
        type: string
        example: 'https://miro.medium.com/max/1200/1*aKVg84SP5oPV9fwOnbl6yQ.png'
      holdStartDate:
        type: string
        format: date-time
        example: '2019/07/19 16:30:00'
      holdEndDate:
        type: string
        format: date-time
        example: '2019/07/19 19:00:00'
      recruitStartDate:
        type: string
        format: date-time
        example: '2019/07/01 24:00:00'
      recruitEndDate:
        type: string
        format: date-time
        example: '2019/07/16 24:00:00'
      organizers:
        type: array
        items:
          $ref: '#/components/schemas/User'
      entries:
        type: array
        items:
          $ref: '#/components/schemas/User'
      categories:
        type: array
        items:
          $ref: '#/components/schemas/Category'
      group:
        $ref: '#/components/schemas/Group'
      venue:
        $ref: '#/components/schemas/Venue'
  Venue:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        example: '1'
      name:
        type: string
        example: 'Village'
