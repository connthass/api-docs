/events:
  get:
    tags:
      - event
    summary: イベントを検索する
    description: 記事の一覧を作成日時の降順で返します。
    operationId: searchEvents
    parameters:
      - $ref: '#/components/parameters/Fields'
      - $ref: '#/components/parameters/Query'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
    responses:
      200:
        $ref: '#/components/responses/SearchEvents'
    security:
      - ApiKeyAuth: []
/event:
  post:
    tags:
      - event
    summary: イベントを追加する
    description: ''
    operationId: createEvent
    requestBody:
      $ref: '#/components/requestBodies/Event'
    responses:
      201:
        $ref: '#/components/responses/CreateEvent'
    security:
      - ApiKeyAuth: []
'/event/{eventId}':
  get:
    tags:
      - event
    summary: IDからイベントを取得する
    description: Returns a single Event
    operationId: getEventById
    parameters:
      - name: eventId
        in: path
        description: ID of event to return
        required: true
        schema:
          type: integer
          format: int64
      - name: fields
        in: query
        description: 検索結果で取得するフィールドをカンマ区切りで指定
        required: false
        schema:
          type: string
    responses:
      200:
        $ref: '#/components/responses/Event'
    security:
      - ApiKeyAuth: []
  patch:
    tags:
      - event
    summary: 特定のイベントを更新する
    description: ''
    operationId: updateEvent
    parameters:
      - name: eventId
        in: path
        description: ID of event that needs to be updated
        required: true
        schema:
          type: integer
          format: int64
    requestBody:
      $ref: '#/components/requestBodies/UpdateEvent'
    responses:
      200:
        $ref: '#/components/responses/UpdateEvent'
    security:
      - ApiKeyAuth: []

  delete:
    tags:
      - event
    summary: 特定のイベントを削除する
    description: ''
    operationId: deleteEvent
    parameters:
      - name: eventId
        in: path
        description: Event id to delete
        required: true
        schema:
          type: integer
          format: int64
    responses:
      204:
        description: No Content
    security:
      - ApiKeyAuth: []
/event/{eventId}/entries:
  get:
    tags:
      - event
    summary: イベントの参加者を取得する
    description: イベントの全参加者を返します
    operationId: searchEventEntriesById
    parameters:
      - name: eventId
        in: path
        description: event identifier
        required: true
        schema:
          type: integer
          format: int64
    responses:
      200:
        $ref: '#/components/responses/SearchEventEntriesById'
    security:
      - ApiKeyAuth: []
/event/{eventId}/entry:
  put:
    tags:
      - event
    summary: イベントに参加する
    description: イベントに参加します
    operationId: createEventEntry
    parameters:
      - name: eventId
        in: path
        description: event identifier
        required: true
        schema:
          type: string
    requestBody:
      $ref: '#/components/requestBodies/EventEntry'
    responses:
      204:
        description: No Content
    security:
      - ApiKeyAuth: []
  delete:
    tags:
      - event
    summary: イベント参加を取り消す
    description: イベント参加権限を削除します
    operationId: deleteEventEntry
    parameters:
      - name: eventId
        in: path
        description: event identifier
        required: true
        schema:
          type: string
    requestBody:
      $ref: '#/components/requestBodies/EventEntry'
    responses:
      204:
        description: No Content
    security:
      - ApiKeyAuth: []
/event/{eventId}/organizers:
  get:
    tags:
      - event
    summary: イベントの運営者を取得する
    description: イベントの運営者を返します
    operationId: searchEventOrganizersById
    parameters:
      - name: eventId
        in: path
        description: event identifier
        required: true
        schema:
          type: integer
          format: int64
    responses:
      200:
        $ref: '#/components/responses/SearchEventOrganizersById'
    security:
      - ApiKeyAuth: []
/event/{eventId}/organizer:
  put:
    tags:
      - event
    summary: イベントの運営に参加する
    description: イベント運営に参加します
    operationId: createEventOrganizer
    parameters:
      - name: eventId
        in: path
        description: event identifier
        required: true
        schema:
          type: string
    requestBody:
      $ref: '#/components/requestBodies/EventOrganizer'
    responses:
      204:
        description: No Content
    security:
      - ApiKeyAuth: []
  delete:
    tags:
      - event
    summary: イベントの運営の参加を取り消す
    description: イベント運営権限を削除します
    operationId: deleteEventOrganizer
    parameters:
      - name: eventId
        in: path
        description: event identifier
        required: true
        schema:
          type: string
    requestBody:
      $ref: '#/components/requestBodies/EventEntry'
    responses:
      204:
        description: No Content
    security:
      - ApiKeyAuth: []
/event/{eventId}/bookmark:
  put:
    tags:
      - event
    summary: イベントを「お気に入り」に追加する
    description: bookmarks関連テーブルにレコードを追加します
    operationId: createBookmark
    parameters:
      - name: eventId
        in: path
        description: name of user
        required: true
        schema:
          type: string
    responses:
      204:
        description: No Content
    security:
      - ApiKeyAuth: []
  delete:
    tags:
      - event
    summary: イベントの「お気に入り」を削除する
    description: bookmarks関連テーブルからレコードを削除します
    operationId: deleteBookmark
    parameters:
      - name: eventId
        in: path
        description: name of user
        required: true
        schema:
          type: string
    responses:
      204:
        description: No Content
    security:
      - ApiKeyAuth: []
/category:
  post:
    tags:
      - category
    summary: カテゴリを作成する
    description: This can only be done by the logged in user.
    operationId: createCategory
    requestBody:
      $ref: '#/components/requestBodies/Category'
    responses:
      200:
        $ref: '#/components/responses/Category'
    security:
      - ApiKeyAuth: []
/category/{categoryId}:
  get:
    tags:
      - 'category'
    summary: IDからカテゴリを取得
    description: カテゴリを一つ返します
    operationId: getCategoryById
    parameters:
      - name: categoryId
        in: path
        description: 'ID of category to return'
        required: true
        schema:
          type: integer
          format: int64
    responses:
      200:
        $ref: '#/components/responses/Category'
    security:
      - ApiKeyAuth: []
/category/{categoryId}/like:
  put:
    tags:
      - category
    summary: カテゴリーに「いいね」する
    description: likes関連テーブルにレコードを追加します
    operationId: createLike
    parameters:
      - name: categoryId
        in: path
        description: name of user
        required: true
        schema:
          type: string
    responses:
      '204':
        description: No Content
    security:
      - ApiKeyAuth: []
  delete:
    tags:
      - category
    summary: カテゴリーの「いいね」を削除する
    description: likes関連テーブルからレコードを削除する
    operationId: deleteLike
    parameters:
      - name: categoryId
        in: path
        description: name of user
        required: true
        schema:
          type: string
    responses:
      '204':
        description: No Content
    security:
      - ApiKeyAuth: []
/groups:
  get:
    tags:
      - group
    summary: グループを検索する
    description: グループの一覧を作成日時の降順で返します。
    operationId: searchGroups
    parameters:
      - $ref: '#/components/parameters/Fields'
      - $ref: '#/components/parameters/Query'
      - $ref: '#/components/parameters/Page'
      - $ref: '#/components/parameters/PerPage'
    responses:
      200:
        $ref: '#/components/responses/SearchGroups'
    security:
      - ApiKeyAuth: []
/group:
  post:
    tags:
      - group
    summary: グループを作成する
    description: This can only be done by the logged in user.
    operationId: createGroup
    requestBody:
      $ref: '#/components/requestBodies/Group'
    responses:
      200:
        $ref: '#/components/responses/Group'
    security:
      - ApiKeyAuth: []
/group/{groupId}:
  get:
    tags:
      - group
    summary: グループ情報を取得する
    description: 'Returns a single group'
    operationId: 'getGroupById'
    parameters:
      - name: groupId
        in: path
        description: 'ID of group to return'
        required: true
        schema:
          type: integer
          format: int64
    responses:
      200:
        $ref: '#/components/responses/Group'
    security:
      - ApiKeyAuth: []
/group/{groupId}/events:
  get:
    tags:
      - group
    summary: グループ情報内イベント群を取得する
    description: 'Returns a single group'
    operationId: searchGroupEventsById
    parameters:
      - name: groupId
        in: path
        description: 'ID of group to return'
        required: true
        schema:
          type: integer
          format: int64
    responses:
      200:
        $ref: '#/components/responses/SearchGroupEventsById'
    security:
      - ApiKeyAuth: []
/group/{groupId}/members:
  get:
    tags:
      - group
    summary: グループ情報内メンバー群を取得する
    description: 'Returns a members of the group'
    operationId: searchGroupMembersById
    parameters:
      - name: groupId
        in: path
        description: 'ID of group to return'
        required: true
        schema:
          type: integer
          format: int64
    responses:
      200:
        $ref: '#/components/responses/SearchGroupMembersById'
    security:
      - ApiKeyAuth: []
/group/{groupId}/member:
  put:
    tags:
      - group
    summary: メンバーに参加する
    description: memberテーブルにレコードを追加する
    operationId: createMember
    parameters:
      - name: groupId
        in: path
        description: ID of group that needs added
        required: true
        schema:
          type: integer
          format: int64
      - name: uid
        in: path
        description: ユーザID
        required: true
        schema:
          type: string
    responses:
      204:
        description: No Content
    security:
      - ApiKeyAuth: []
  delete:
    tags:
      - group
    summary: メンバーを削除する
    description: memberテーブルからレコードを削除する
    operationId: deleteMember
    parameters:
      - name: groupId
        in: path
        description: member id to delete
        required: true
        schema:
          type: integer
          format: int64
      - name: uid
        in: path
        description: ユーザID
        required: true
        schema:
          type: string
    responses:
      204:
        description: No Content
    security:
      - ApiKeyAuth: []
/user:
  post:
    tags:
      - user
    summary: ユーザを作成する
    description: This can only be done by the logged in user.
    operationId: createUser
    requestBody:
      $ref: '#/components/requestBodies/User'
    responses:
      200:
        $ref: '#/components/responses/User'
    security:
      - ApiKeyAuth: []
/user/{uid}:
  get:
    tags:
      - user
    summary: ユーザ名から情報を取得
    description: ''
    operationId: getUserByUID
    parameters:
      - name: uid
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing.'
        required: true
        schema:
          type: string
    responses:
      200:
        $ref: '#/components/responses/User'
    security:
      - ApiKeyAuth: []
  put:
    tags:
      - user
    summary: ユーザ情報を更新
    description: This can only be done by the logged in user.
    operationId: updateUser
    parameters:
      - name: uid
        in: path
        description: The uid that need to be updated
        required: true
        schema:
          type: string
    requestBody:
      $ref: '#/components/requestBodies/User'
    responses:
      204:
        description: No content
    security:
      - ApiKeyAuth: []
  delete:
    tags:
      - user
    summary: ユーザを削除
    description: This can only be done by the logged in user.
    operationId: deleteUser
    parameters:
      - name: uid
        in: path
        description: The uid that needs to be deleted
        required: true
        schema:
          type: string
    responses:
      204:
        description: No Content
    security:
      - ApiKeyAuth: []
/user/{uid}/newEvents:
  get:
    tags:
      - user
    summary: 新着イベントを取得する
    description: ''
    operationId: getNewEvents
    parameters:
      - name: uid
        in: path
        description: uid of user
        required: true
        schema:
          type: string
    responses:
      200:
        $ref: '#/components/responses/UserNewEvents'
    security:
      - ApiKeyAuth: []